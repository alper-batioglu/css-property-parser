// Generated automatically by nearley
// http://github.com/Hardmath123/nearley
(function () {
function id(x) {return x[0]; }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "_$ebnf$1", "symbols": []},
    {"name": "_$ebnf$1", "symbols": ["_$ebnf$1", "wschar"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "_", "symbols": ["_$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "__$ebnf$1", "symbols": ["wschar"]},
    {"name": "__$ebnf$1", "symbols": ["__$ebnf$1", "wschar"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "__", "symbols": ["__$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "wschar", "symbols": [/[ \t\n\v\f]/], "postprocess": id},
    {"name": "Base$subexpression$1", "symbols": ["length_numberWithUnit"]},
    {"name": "Base$subexpression$1", "symbols": [{"literal":"0"}]},
    {"name": "Base", "symbols": ["Base$subexpression$1"], "postprocess": function (d,l) { return { name: 'Base', values: d.filter(Boolean), l }; }},
    {"name": "length_numberWithUnit", "symbols": ["number", "lengthUnit"], "postprocess": id},
    {"name": "number$ebnf$1$subexpression$1", "symbols": [{"literal":"+"}]},
    {"name": "number$ebnf$1$subexpression$1", "symbols": [{"literal":"-"}]},
    {"name": "number$ebnf$1", "symbols": ["number$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "number$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "number$subexpression$1", "symbols": ["number_simple"]},
    {"name": "number$subexpression$1", "symbols": ["number_float"]},
    {"name": "number", "symbols": ["number$ebnf$1", "number$subexpression$1"], "postprocess": id},
    {"name": "number_simple$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "number_simple$ebnf$1", "symbols": ["number_simple$ebnf$1", /[0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "number_simple", "symbols": ["number_simple$ebnf$1"], "postprocess": id},
    {"name": "number_float$ebnf$1", "symbols": []},
    {"name": "number_float$ebnf$1", "symbols": ["number_float$ebnf$1", /[0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "number_float$ebnf$2", "symbols": [/[0-9]/]},
    {"name": "number_float$ebnf$2", "symbols": ["number_float$ebnf$2", /[0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "number_float", "symbols": ["number_float$ebnf$1", {"literal":"."}, "number_float$ebnf$2"], "postprocess": id},
    {"name": "lengthUnit$subexpression$1$string$1", "symbols": [{"literal":"c"}, {"literal":"h"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$1"]},
    {"name": "lengthUnit$subexpression$1$string$2", "symbols": [{"literal":"c"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$2"]},
    {"name": "lengthUnit$subexpression$1$string$3", "symbols": [{"literal":"e"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$3"]},
    {"name": "lengthUnit$subexpression$1$string$4", "symbols": [{"literal":"e"}, {"literal":"x"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$4"]},
    {"name": "lengthUnit$subexpression$1$string$5", "symbols": [{"literal":"f"}, {"literal":"r"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$5"]},
    {"name": "lengthUnit$subexpression$1$string$6", "symbols": [{"literal":"i"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$6"]},
    {"name": "lengthUnit$subexpression$1$string$7", "symbols": [{"literal":"m"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$7"]},
    {"name": "lengthUnit$subexpression$1$string$8", "symbols": [{"literal":"p"}, {"literal":"c"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$8"]},
    {"name": "lengthUnit$subexpression$1$string$9", "symbols": [{"literal":"p"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$9"]},
    {"name": "lengthUnit$subexpression$1$string$10", "symbols": [{"literal":"p"}, {"literal":"x"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$10"]},
    {"name": "lengthUnit$subexpression$1", "symbols": [{"literal":"q"}]},
    {"name": "lengthUnit$subexpression$1$string$11", "symbols": [{"literal":"r"}, {"literal":"e"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$11"]},
    {"name": "lengthUnit$subexpression$1$string$12", "symbols": [{"literal":"v"}, {"literal":"h"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$12"]},
    {"name": "lengthUnit$subexpression$1$string$13", "symbols": [{"literal":"v"}, {"literal":"m"}, {"literal":"a"}, {"literal":"x"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$13"]},
    {"name": "lengthUnit$subexpression$1$string$14", "symbols": [{"literal":"v"}, {"literal":"m"}, {"literal":"i"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$14"]},
    {"name": "lengthUnit$subexpression$1$string$15", "symbols": [{"literal":"v"}, {"literal":"w"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "lengthUnit$subexpression$1", "symbols": ["lengthUnit$subexpression$1$string$15"]},
    {"name": "lengthUnit", "symbols": ["lengthUnit$subexpression$1"], "postprocess": id}
]
  , ParserStart: "Base"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
